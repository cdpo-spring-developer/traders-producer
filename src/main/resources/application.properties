spring.application.name=traders-producer
server.port=8081

spring.kafka.bootstrap-servers=${kafka_bootstrap_servers:localhost:9092}
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username=${kafka_username:'admin'} password=${kafka_password:'admin-secret'};
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.producer.client-id=lessons
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.retries=2
spring.kafka.jaas.enabled=true

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=user
spring.rabbitmq.password=password
spring.rabbitmq.virtual-host=lessons

# https://howtodoinjava.com/spring-boot/actuator-endpoints-example/
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=*


#spring.kafka.properties.security.protocol=SASL_PLAINTEXT
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.group-id=example
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.max-poll-records=1
#spring.kafka.consumer.fetch-max-wait=36000
#spring.kafka.consumer.enable-auto-commit=false
#spring.kafka.consumer.client-id=example

#spring.kafka.listener.poll-timeout=1800000
#spring.kafka.listener.concurrency=1
#spring.kafka.listener.ack-mode=manual_immediate

